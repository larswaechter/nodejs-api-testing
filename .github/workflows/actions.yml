name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  app:
    runs-on: ubuntu-18.04

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: nodejs_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-modules-be-${{ hashFiles('package-lock.json') }}

      - name: Create env file
        run: |
          touch .env
          echo PGHOST=localhost >> ./.env
          echo PGUSER=root >> ./.env
          echo PGPASSWORD=mypassword >> ./.env
          echo PGDATABASE=nodejs_test >> ./.env
          echo PGPORT=5432 >> ./.env
          cat .env

      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Linter
        run: npm run lint
      - name: Run Prettier
        run: npm run prettier:ci
      - name: Build
        run: npm run build
      - name: Tests
        run: npm run test:db
